{"version":3,"sources":["Display.tsx","utils.ts","Header.tsx","Field.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Display","value","length","style","background","color","padding","rectHW","Header","mineCount","time","columns","reset","minWidth","display","justifyContent","className","onClick","Field","rows","startGame","mines","numbers","openFields","markCell","marked","revealMines","canvasRef","useRef","useState","x","setX","y","setY","useEffect","canvas","current","ctx","getContext","height","width","textBaseline","textAlign","font","fillStyle","beginPath","clearRect","strokeStyle","i","j","moveTo","lineTo","stroke","closePath","drawLines","hoverReact","find","m","num","fillText","fillRect","evt","addEventListener","onContextMenu","preventDefault","removeEventListener","hover","Math","floor","offsetX","offsetY","leave","ref","openNearCells","result","toCheck","p","push","point","n","App","rowRef","columnRef","countRef","timerId","setMineCount","setMarked","setTime","setRows","setColumns","setMines","setNumbers","setOpenFields","isClick","setIsClick","setReavelMines","useCallback","clearInterval","rowCount","columnCount","count","id","set","Set","size","add","random","delete","Array","from","map","t","setInterval","f","arr","idx","findIndex","filter","_","alert","flexDirection","alignItems","gridTemplateColumns","gridColumn","r","Number","c","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","console","log"],"mappings":"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","file":"static/js/main.8e470f48.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n\r\nexport const Display: FC<{ value: string }> = ({ value }) => {\r\n  while (value.length < 3) {\r\n    value = \"0\" + value;\r\n  }\r\n  return (\r\n    <span style={{ background: \"black\", color: \"red\", padding: \"2px 5px\" }}>\r\n      {value}\r\n    </span>\r\n  );\r\n};\r\n","export const cell = 16;\r\n\r\nexport const rectHW = 20;","import React, { FC } from \"react\";\r\nimport { Display } from \"./Display\";\r\nimport { cell } from \"./utils\";\r\n\r\nexport const Header: FC<{\r\n  mineCount: number;\r\n  time: number;\r\n  columns: number;\r\n  reset: () => void;\r\n}> = ({ mineCount, time, columns, reset }) => (\r\n  <div\r\n    style={{\r\n      padding: \"5px\",\r\n      minWidth: columns * cell + \"px\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\"\r\n    }}\r\n  >\r\n    <Display value={mineCount + \"\"} />\r\n    <button className=\"smile-button\" onClick={reset} />\r\n    <Display value={time + \"\"} />\r\n  </div>\r\n);\r\n","import React, { FC, useRef, useState, useEffect } from \"react\";\r\nimport { cell, rectHW } from \"./utils\";\r\n\r\nconst drawLines = (\r\n  columns: number,\r\n  rows: number,\r\n  ctx: CanvasRenderingContext2D\r\n) => {\r\n  ctx.beginPath();\r\n  ctx.clearRect(0, 0, columns * rectHW, rows * rectHW);\r\n  ctx.strokeStyle = \"darkgrey\";\r\n\r\n  for (let i = 0; i < columns; ++i) {\r\n    for (let j = 0; j < rows; ++j) {\r\n      ctx.moveTo(i * rectHW, j * rectHW);\r\n      ctx.lineTo(i * rectHW + rectHW, j * rectHW);\r\n      ctx.lineTo(i * rectHW + rectHW, j * rectHW + rectHW);\r\n      ctx.lineTo(i * rectHW, j * rectHW + rectHW);\r\n      ctx.lineTo(i * rectHW, j * rectHW);\r\n    }\r\n  }\r\n  ctx.stroke();\r\n  ctx.closePath();\r\n};\r\n\r\nconst hoverReact = (x: number, y: number, ctx: CanvasRenderingContext2D) => {\r\n  ctx.beginPath();\r\n  ctx.strokeStyle = \"black\";\r\n\r\n  ctx.moveTo(x * rectHW, y * rectHW);\r\n  ctx.lineTo(x * rectHW + rectHW, y * rectHW);\r\n  ctx.lineTo(x * rectHW + rectHW, y * rectHW + rectHW);\r\n  ctx.lineTo(x * rectHW, y * rectHW + rectHW);\r\n  ctx.lineTo(x * rectHW, y * rectHW);\r\n\r\n  ctx.stroke();\r\n  ctx.closePath();\r\n};\r\n\r\nexport const Field: FC<{\r\n  rows: number;\r\n  columns: number;\r\n  startGame: (x: number, y: number) => void;\r\n  markCell: (x: number, y: number) => void;\r\n  mines: Array<{ x: number; y: number }>;\r\n  marked: Array<{ x: number; y: number }>;\r\n  numbers: Array<{ x: number; y: number; value: number }>;\r\n  openFields: Array<{ x: number; y: number }>;\r\n  revealMines: boolean;\r\n}> =\r\n  ({\r\n    columns,\r\n    rows,\r\n    startGame,\r\n    mines,\r\n    numbers,\r\n    openFields,\r\n    markCell,\r\n    marked,\r\n    revealMines\r\n  }) => {\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const [x, setX] = useState(-1);\r\n    const [y, setY] = useState(-1);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n      canvas.height = rows * rectHW;\r\n      canvas.width = columns * rectHW;\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.font = \"16px Arial\";\r\n      ctx.fillStyle = \"grey\";\r\n\r\n      drawLines(columns, rows, ctx);\r\n      if (x !== -1 && y !== -1) {\r\n        hoverReact(x, y, ctx);\r\n      }\r\n\r\n      for (const { x, y } of openFields) {\r\n        if (mines.find(m => m.x === x && m.y === y)) {\r\n          continue;\r\n        }\r\n        const num = numbers.find(m => m.x === x && m.y === y);\r\n        if (!num) {\r\n          return;\r\n        }\r\n        ctx.fillStyle = \"grey\";\r\n        if (num.value !== 0) {\r\n          ctx.fillText(\r\n            num.value + \"\",\r\n            x * rectHW + rectHW / 2,\r\n            y * rectHW + rectHW / 2\r\n          );\r\n        } else {\r\n          ctx.fillRect(x * rectHW, y * rectHW, rectHW, rectHW);\r\n        }\r\n      }\r\n\r\n      for (const { x, y } of marked) {\r\n        ctx.fillText(\"!\", x * rectHW + rectHW / 2, y * rectHW + rectHW / 2);\r\n      }\r\n\r\n      if (!revealMines) {\r\n        return;\r\n      }\r\n\r\n      ctx.fillStyle = \"red\";\r\n      for (const { x, y } of mines) {\r\n        ctx.fillRect(x * rectHW, y * rectHW, rectHW, rectHW);\r\n      }\r\n\r\n      ctx.fillStyle = \"grey\";\r\n      for (const { x, y } of marked) {\r\n        ctx.fillText(\"!\", x * rectHW + rectHW / 2, y * rectHW + rectHW / 2);\r\n      }\r\n    }, [x, y, mines, columns, rows, openFields, numbers, marked, revealMines]);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n\r\n      const onClick = (evt: MouseEvent) => {\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        startGame(x, y);\r\n      };\r\n      canvas.addEventListener(\"click\", onClick);\r\n\r\n      const onContextMenu = (evt: MouseEvent) => {\r\n        evt.preventDefault();\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        markCell(x, y);\r\n      };\r\n      canvas.addEventListener(\"contextmenu\", onContextMenu);\r\n\r\n      return () => {\r\n        canvas.removeEventListener(\"click\", onClick);\r\n        canvas.removeEventListener(\"contextmenu\", onContextMenu);\r\n      };\r\n    }, [x, y, startGame, revealMines, markCell]);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n\r\n\r\n      const hover = (evt: MouseEvent) => {\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        setX(Math.floor(evt.offsetX / cell));\r\n        setY(Math.floor(evt.offsetY / cell));\r\n      };\r\n      canvas.addEventListener(\"mousemove\", hover);\r\n\r\n      const leave = () => {\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        setX(-1);\r\n        setY(-1);\r\n      };\r\n      canvas.addEventListener(\"mouseleave\", leave);\r\n\r\n      return () => {\r\n        canvas.removeEventListener(\"mousemove\", hover);\r\n        canvas.removeEventListener(\"mouseleave\", leave);\r\n      };\r\n    }, [columns, revealMines, rows]);\r\n\r\n    return (\r\n      <div style={{ padding: \"5px\" }}>\r\n        <div\r\n          style={{\r\n            width: cell * columns + \"px\",\r\n            height: cell * rows + \"px\"\r\n          }}\r\n        >\r\n          <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\"\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n","import React, { FC, useEffect, useState, useCallback, useRef } from \"react\";\nimport { Header } from \"./Header\";\nimport { Field } from \"./Field\";\n\ntype Point = { x: number; y: number };\ntype Points = Array<Point>;\n\nconst count = 10;\nconst rowCount = 10;\nconst columnCount = 10;\n\nconst openNearCells = (\n  numbers: Array<{ x: number; y: number; value: number }>,\n  x: number,\n  y: number,\n  rows: number,\n  columns: number,\n  result: Points\n) => {\n  const toCheck: Points = [];\n  if (\n    x !== 0 &&\n    y !== 0 &&\n    !result.find((p) => p.x === x - 1 && p.y === y - 1)\n  ) {\n    toCheck.push({ x: x - 1, y: y - 1 });\n  }\n  if (y !== 0 && !result.find((p) => p.x === x && p.y === y - 1)) {\n    toCheck.push({ x, y: y - 1 });\n  }\n  if (\n    x !== columns - 1 &&\n    y !== 0 &&\n    !result.find((p) => p.x === x + 1 && p.y === y - 1)\n  ) {\n    toCheck.push({ x: x + 1, y: y - 1 });\n  }\n  if (x !== 0 && !result.find((p) => p.x === x - 1 && p.y === y)) {\n    toCheck.push({ x: x - 1, y });\n  }\n  if (x !== columns - 1 && !result.find((p) => p.x === x + 1 && p.y === y)) {\n    toCheck.push({ x: x + 1, y });\n  }\n  if (\n    x !== 0 &&\n    y !== rows - 1 &&\n    !result.find((p) => p.x === x - 1 && p.y === y + 1)\n  ) {\n    toCheck.push({ x: x - 1, y: y + 1 });\n  }\n  if (y !== rows - 1 && !result.find((p) => p.x === x && p.y === y + 1)) {\n    toCheck.push({ x, y: y + 1 });\n  }\n  if (\n    x !== columns - 1 &&\n    y !== rows - 1 &&\n    !result.find((p) => p.x === x + 1 && p.y === y + 1)\n  ) {\n    toCheck.push({ x: x + 1, y: y + 1 });\n  }\n\n  result.push(...toCheck);\n  for (const point of toCheck) {\n    const num = numbers.find((n) => n.x === point.x && n.y === point.y);\n    if (num?.value === 0) {\n      openNearCells(numbers, point.x, point.y, rows, columns, result);\n    }\n  }\n};\n\nexport const App: FC = () => {\n  const rowRef = useRef<HTMLInputElement>(null);\n  const columnRef = useRef<HTMLInputElement>(null);\n  const countRef = useRef<HTMLInputElement>(null);\n  const timerId = useRef<NodeJS.Timer>(-1 as any);\n  const [mineCount, setMineCount] = useState(count);\n  const [marked, setMarked] = useState<Points>([]);\n  const [time, setTime] = useState(0);\n  const [rows, setRows] = useState(rowCount);\n  const [columns, setColumns] = useState(columnCount);\n  const [mines, setMines] = useState<Points>([]);\n  const [numbers, setNumbers] = useState<\n    Array<{ x: number; y: number; value: number }>\n  >([]);\n  const [openFields, setOpenFields] = useState<Points>([]);\n  const [isClick, setIsClick] = useState(false);\n  const [revealMines, setReavelMines] = useState(false);\n\n  const reset = useCallback(() => {\n    clearInterval(timerId.current);\n    setTime(0);\n    setMarked([]);\n    setNumbers([]);\n    setOpenFields([]);\n    setMines([]);\n    setReavelMines(false);\n  }, []);\n\n  useEffect(() => {\n    if (!rowRef.current || !columnRef.current || !countRef.current) {\n      return;\n    }\n    rowRef.current.value = rowCount + \"\";\n    columnRef.current.value = columnCount + \"\";\n    countRef.current.value = count + \"\";\n  }, []);\n\n  const onUpdate = () => {\n    reset();\n    const r = Number(rowRef.current?.value);\n    const c = Number(columnRef.current?.value);\n    const m = Number(countRef.current?.value);\n\n    if (Number.isNaN(r) || Number.isNaN(c) || Number.isNaN(m)) {\n      alert(\"bad values\");\n      return;\n    }\n    if (r * c < m) {\n      alert(\"bad values\");\n      return;\n    }\n\n    setMineCount(m);\n    setRows(r);\n    setColumns(c);\n  };\n\n  const startGame = useCallback(\n    (x: number, y: number) => {\n      if (!mines.length) {\n        const id = x + y * columns;\n        const set = new Set<number>([id]);\n\n        while (set.size !== mineCount + 1) {\n          set.add(Math.floor(Math.random() * rows * columns));\n        }\n        set.delete(id);\n\n        setMines(\n          Array.from(set).map((id) => {\n            const x = id % columns;\n            const y = Math.floor(id / columns);\n            return { x, y };\n          })\n        );\n        setTime((t) => 1);\n        timerId.current = setInterval(() => {\n          setTime((t) => t + 1);\n        }, 1000);\n      }\n      if (marked.find((f) => f.x === x && f.y === y)) {\n        return;\n      }\n      const field = openFields.find((f) => f.x === x && f.y === y);\n      if (!field) {\n        setOpenFields((arr) => [...arr, { x, y }]);\n        setIsClick(true);\n      }\n    },\n\n    [mines, mineCount, rows, columns, openFields, marked]\n  );\n\n  const markCell = useCallback(\n    (x: number, y: number) => {\n      if (openFields.find((m) => m.x === x && m.y === y)) {\n        return;\n      }\n      const idx = marked.findIndex((m) => m.x === x && m.y === y);\n      if (idx !== -1) {\n        setMarked((arr) => arr.filter((_, i) => i !== idx));\n      } else if (marked.length !== mineCount) {\n        setMarked((arr) => [...arr, { x, y }]);\n      }\n    },\n    [mineCount, marked, openFields]\n  );\n\n  useEffect(() => {\n    const result: Array<{ x: number; y: number; value: number }> = [];\n\n    for (let i = 0; i < columns; ++i) {\n      for (let j = 0; j < rows; ++j) {\n        if (mines.find((m) => m.x === i && m.y === j)) {\n          continue;\n        }\n\n        let count = 0;\n        if (j !== 0 && i !== 0) {\n          const mine = mines.find((m) => m.x === i - 1 && m.y === j - 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (j !== 0) {\n          const mine = mines.find((m) => m.x === i && m.y === j - 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (j !== 0 && i !== columns - 1) {\n          const mine = mines.find((m) => m.x === i + 1 && m.y === j - 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== 0) {\n          const mine = mines.find((m) => m.x === i - 1 && m.y === j);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== columns - 1) {\n          const mine = mines.find((m) => m.x === i + 1 && m.y === j);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== 0 && j !== rows - 1) {\n          const mine = mines.find((m) => m.x === i - 1 && m.y === j + 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (j !== rows - 1) {\n          const mine = mines.find((m) => m.x === i && m.y === j + 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== columns - 1 && j !== rows - 1) {\n          const mine = mines.find((m) => m.x === i + 1 && m.y === j + 1);\n          if (mine) {\n            count++;\n          }\n        }\n        result.push({ x: i, y: j, value: count });\n      }\n    }\n    setNumbers(result);\n  }, [columns, mines, rows]);\n\n  useEffect(() => {\n    if (!openFields.length || !isClick) {\n      return;\n    }\n\n    setIsClick(false);\n    const { x, y } = openFields[openFields.length - 1];\n    const field = mines.find((m) => m.x === x && m.y === y);\n    if (field) {\n      alert(\"you lost\");\n      setReavelMines(true);\n      return;\n    }\n    const num = numbers.find((m) => m.x === x && m.y === y);\n    if (!num) {\n      return;\n    }\n\n    if (num.value === 0) {\n      const result: Points = [...openFields];\n      openNearCells(numbers, x, y, rows, columns, result);\n      setOpenFields(result);\n    }\n  }, [openFields, numbers, mines, rows, columns, isClick]);\n\n  useEffect(() => {\n    if (openFields.length + mineCount === rows * columns) {\n      alert(\"win\");\n      clearInterval(timerId.current);\n    }\n  }, [openFields, mineCount, rows, columns]);\n\n  return (\n    <div\n      style={{\n        background: \"#eeeeee\",\n        display: \"inline-flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Header\n        mineCount={mineCount - marked.length}\n        time={time}\n        columns={columns}\n        reset={reset}\n      />\n      <Field\n        rows={rows}\n        columns={columns}\n        startGame={startGame}\n        mines={mines}\n        numbers={numbers}\n        openFields={openFields}\n        marked={marked}\n        markCell={markCell}\n        revealMines={revealMines}\n      />\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        <div style={{ display: \"grid\", gridTemplateColumns: \"100px 50px\" }}>\n          <label style={{ display: \"contents\" }}>\n            mine count:\n            <input ref={countRef} />\n          </label>\n          <label style={{ display: \"contents\" }}>\n            rows:\n            <input ref={rowRef} />\n          </label>\n          <label style={{ display: \"contents\" }}>\n            columns:\n            <input ref={columnRef} />\n          </label>\n          <button style={{ gridColumn: \"1 / span 2\" }} onClick={onUpdate}>\n            update\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals(console.log);\n"],"sourceRoot":""}