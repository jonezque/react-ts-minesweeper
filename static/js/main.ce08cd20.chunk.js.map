{"version":3,"sources":["Display.tsx","utils.ts","Header.tsx","Field.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Display","value","length","style","background","color","padding","rectHW","Header","mineCount","time","columns","reset","minWidth","display","justifyContent","className","onClick","drawLines","rows","ctx","beginPath","clearRect","strokeStyle","i","j","moveTo","lineTo","stroke","closePath","Field","React","memo","startGame","mines","numbers","openFields","markCell","marked","revealMines","canvasRef","useRef","useState","x","setX","y","setY","console","log","useEffect","current","getContext","hoverReact","canvas","evt","addEventListener","onContextMenu","preventDefault","removeEventListener","height","width","textBaseline","textAlign","font","fillStyle","hover","Math","floor","offsetX","offsetY","leave","find","m","num","fillText","fillRect","ref","openNearCells","result","toCheck","p","push","point","n","App","rowRef","columnRef","countRef","timerId","setMineCount","setMarked","setTime","setRows","setColumns","setMines","setNumbers","setOpenFields","isClick","setIsClick","setReavelMines","useCallback","clearInterval","rowCount","columnCount","count","id","set","Set","size","add","random","delete","Array","from","map","t","setInterval","f","arr","idx","findIndex","filter","_","alert","flexDirection","alignItems","gridTemplateColumns","gridColumn","r","Number","c","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ce08cd20.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n\r\nexport const Display: FC<{ value: string }> = ({ value }) => {\r\n  while (value.length < 3) {\r\n    value = \"0\" + value;\r\n  }\r\n  return (\r\n    <span style={{ background: \"black\", color: \"red\", padding: \"2px 5px\" }}>\r\n      {value}\r\n    </span>\r\n  );\r\n};\r\n","export const cell = 16;\r\n\r\nexport const rectHW = 20;","import React, { FC } from \"react\";\r\nimport { Display } from \"./Display\";\r\nimport { cell } from \"./utils\";\r\n\r\nexport const Header: FC<{\r\n  mineCount: number;\r\n  time: number;\r\n  columns: number;\r\n  reset: () => void;\r\n}> = ({ mineCount, time, columns, reset }) => (\r\n  <div\r\n    style={{\r\n      padding: \"5px\",\r\n      minWidth: columns * cell + \"px\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\"\r\n    }}\r\n  >\r\n    <Display value={mineCount + \"\"} />\r\n    <button className=\"smile-button\" onClick={reset} />\r\n    <Display value={time + \"\"} />\r\n  </div>\r\n);\r\n","import React, { FC, useRef, useState, useEffect } from \"react\";\r\nimport { cell, rectHW } from \"./utils\";\r\n\r\nconst drawLines = (\r\n  columns: number,\r\n  rows: number,\r\n  ctx: CanvasRenderingContext2D\r\n) => {\r\n  ctx.beginPath();\r\n  ctx.clearRect(0, 0, columns * rectHW, rows * rectHW);\r\n  ctx.strokeStyle = \"darkgrey\";\r\n\r\n  for (let i = 0; i < columns; ++i) {\r\n    for (let j = 0; j < rows; ++j) {\r\n      ctx.moveTo(i * rectHW, j * rectHW);\r\n      ctx.lineTo(i * rectHW + rectHW, j * rectHW);\r\n      ctx.lineTo(i * rectHW + rectHW, j * rectHW + rectHW);\r\n      ctx.lineTo(i * rectHW, j * rectHW + rectHW);\r\n      ctx.lineTo(i * rectHW, j * rectHW);\r\n    }\r\n  }\r\n  ctx.stroke();\r\n  ctx.closePath();\r\n};\r\n\r\nconst hoverReact = (x: number, y: number, ctx: CanvasRenderingContext2D) => {\r\n  ctx.beginPath();\r\n  ctx.strokeStyle = \"black\";\r\n\r\n  ctx.moveTo(x * rectHW, y * rectHW);\r\n  ctx.lineTo(x * rectHW + rectHW, y * rectHW);\r\n  ctx.lineTo(x * rectHW + rectHW, y * rectHW + rectHW);\r\n  ctx.lineTo(x * rectHW, y * rectHW + rectHW);\r\n  ctx.lineTo(x * rectHW, y * rectHW);\r\n\r\n  ctx.stroke();\r\n  ctx.closePath();\r\n};\r\n\r\nexport const Field: FC<{\r\n  rows: number;\r\n  columns: number;\r\n  startGame: (x: number, y: number) => void;\r\n  markCell: (x: number, y: number) => void;\r\n  mines: Array<{ x: number; y: number }>;\r\n  marked: Array<{ x: number; y: number }>;\r\n  numbers: Array<{ x: number; y: number; value: number }>;\r\n  openFields: Array<{ x: number; y: number }>;\r\n  revealMines: boolean;\r\n}> = React.memo(\r\n  ({\r\n    columns,\r\n    rows,\r\n    startGame,\r\n    mines,\r\n    numbers,\r\n    openFields,\r\n    markCell,\r\n    marked,\r\n    revealMines\r\n  }) => {\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const [x, setX] = useState(-1);\r\n    const [y, setY] = useState(-1);\r\n    console.log(x, y);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n\r\n      drawLines(columns, rows, ctx);\r\n      if (x !== -1 && y !== -1) {\r\n        hoverReact(x, y, ctx);\r\n      }\r\n    }, [x, y, mines, columns, rows]);\r\n\r\n    useEffect(() => {\r\n      console.log(\"asd\", x, y);\r\n      const canvas = canvasRef.current!;\r\n\r\n      const onClick = (evt: MouseEvent) => {\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        console.log(\"s\", x, y);\r\n        startGame(x, y);\r\n      };\r\n      canvas.addEventListener(\"click\", onClick);\r\n\r\n      const onContextMenu = (evt: MouseEvent) => {\r\n        evt.preventDefault();\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        markCell(x, y);\r\n      };\r\n      canvas.addEventListener(\"contextmenu\", onContextMenu);\r\n\r\n      return () => {\r\n        canvas.removeEventListener(\"click\", onClick);\r\n        canvas.removeEventListener(\"contextmenu\", onContextMenu);\r\n      };\r\n    }, [x, y, startGame, revealMines, markCell]);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n\r\n      canvas.height = rows * rectHW;\r\n      canvas.width = columns * rectHW;\r\n\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n      drawLines(columns, rows, ctx);\r\n\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.font = \"16px Arial\";\r\n      ctx.fillStyle = \"grey\";\r\n\r\n      const hover = (evt: MouseEvent) => {\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        setX(Math.floor(evt.offsetX / cell));\r\n        setY(Math.floor(evt.offsetY / cell));\r\n      };\r\n      canvas.addEventListener(\"mousemove\", hover);\r\n\r\n      const leave = () => {\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        setX(-1);\r\n        setY(-1);\r\n      };\r\n      canvas.addEventListener(\"mouseleave\", leave);\r\n\r\n      return () => {\r\n        canvas.removeEventListener(\"mousemove\", hover);\r\n        canvas.removeEventListener(\"mouseleave\", leave);\r\n      };\r\n    }, [columns, revealMines, rows]);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n      for (const { x, y } of openFields) {\r\n        if (mines.find(m => m.x === x && m.y === y)) {\r\n          return;\r\n        }\r\n        const num = numbers.find(m => m.x === x && m.y === y);\r\n        if (!num) {\r\n          return;\r\n        }\r\n\r\n        ctx.fillStyle = \"grey\";\r\n        if (num.value !== 0) {\r\n          ctx.fillText(\r\n            num.value + \"\",\r\n            x * rectHW + rectHW / 2,\r\n            y * rectHW + rectHW / 2\r\n          );\r\n        } else {\r\n          ctx.fillRect(x * rectHW, y * rectHW, rectHW, rectHW);\r\n        }\r\n      }\r\n    }, [numbers, openFields, mines, x, y, columns, rows, revealMines]);\r\n\r\n    useEffect(() => {\r\n      if (!revealMines) {\r\n        return;\r\n      }\r\n      const canvas = canvasRef.current!;\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n\r\n      ctx.fillStyle = \"red\";\r\n      for (const { x, y } of mines) {\r\n        ctx.fillRect(x * rectHW, y * rectHW, rectHW, rectHW);\r\n      }\r\n    }, [mines, revealMines]);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n\r\n      for (const { x, y } of marked) {\r\n        ctx.fillText(\"!\", x * rectHW + rectHW / 2, y * rectHW + rectHW / 2);\r\n      }\r\n    }, [marked, x, y, revealMines]);\r\n\r\n    return (\r\n      <div style={{ padding: \"5px\" }}>\r\n        <div\r\n          style={{\r\n            width: cell * columns + \"px\",\r\n            height: cell * rows + \"px\"\r\n          }}\r\n        >\r\n          <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\"\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { FC, useEffect, useState, useCallback, useRef } from \"react\";\nimport { Header } from \"./Header\";\nimport { Field } from \"./Field\";\n\ntype Point = { x: number; y: number };\ntype Points = Array<Point>;\n\nconst count = 10;\nconst rowCount = 10;\nconst columnCount = 10;\n\nconst openNearCells = (\n  numbers: Array<{ x: number; y: number; value: number }>,\n  x: number,\n  y: number,\n  rows: number,\n  columns: number,\n  result: Points\n) => {\n  const toCheck: Points = [];\n  if (\n    x !== 0 &&\n    y !== 0 &&\n    !result.find((p) => p.x === x - 1 && p.y === y - 1)\n  ) {\n    toCheck.push({ x: x - 1, y: y - 1 });\n  }\n  if (y !== 0 && !result.find((p) => p.x === x && p.y === y - 1)) {\n    toCheck.push({ x, y: y - 1 });\n  }\n  if (\n    x !== columns - 1 &&\n    y !== 0 &&\n    !result.find((p) => p.x === x + 1 && p.y === y - 1)\n  ) {\n    toCheck.push({ x: x + 1, y: y - 1 });\n  }\n  if (x !== 0 && !result.find((p) => p.x === x - 1 && p.y === y)) {\n    toCheck.push({ x: x - 1, y });\n  }\n  if (x !== columns - 1 && !result.find((p) => p.x === x + 1 && p.y === y)) {\n    toCheck.push({ x: x + 1, y });\n  }\n  if (\n    x !== 0 &&\n    y !== rows - 1 &&\n    !result.find((p) => p.x === x - 1 && p.y === y + 1)\n  ) {\n    toCheck.push({ x: x - 1, y: y + 1 });\n  }\n  if (y !== rows - 1 && !result.find((p) => p.x === x && p.y === y + 1)) {\n    toCheck.push({ x, y: y + 1 });\n  }\n  if (\n    x !== columns - 1 &&\n    y !== rows - 1 &&\n    !result.find((p) => p.x === x + 1 && p.y === y + 1)\n  ) {\n    toCheck.push({ x: x + 1, y: y + 1 });\n  }\n\n  result.push(...toCheck);\n  for (const point of toCheck) {\n    const num = numbers.find((n) => n.x === point.x && n.y === point.y);\n    if (num?.value === 0) {\n      openNearCells(numbers, point.x, point.y, rows, columns, result);\n    }\n  }\n};\n\nexport const App: FC = () => {\n  const rowRef = useRef<HTMLInputElement>(null);\n  const columnRef = useRef<HTMLInputElement>(null);\n  const countRef = useRef<HTMLInputElement>(null);\n  const timerId = useRef<NodeJS.Timer>(-1 as any);\n  const [mineCount, setMineCount] = useState(count);\n  const [marked, setMarked] = useState<Points>([]);\n  const [time, setTime] = useState(0);\n  const [rows, setRows] = useState(rowCount);\n  const [columns, setColumns] = useState(columnCount);\n  const [mines, setMines] = useState<Points>([]);\n  const [numbers, setNumbers] = useState<\n    Array<{ x: number; y: number; value: number }>\n  >([]);\n  const [openFields, setOpenFields] = useState<Points>([]);\n  const [isClick, setIsClick] = useState(false);\n  const [revealMines, setReavelMines] = useState(false);\n\n  const reset = useCallback(() => {\n    clearInterval(timerId.current);\n    setTime(0);\n    setMarked([]);\n    setNumbers([]);\n    setOpenFields([]);\n    setMines([]);\n    setReavelMines(false);\n  }, []);\n\n  useEffect(() => {\n    if (!rowRef.current || !columnRef.current || !countRef.current) {\n      return;\n    }\n    rowRef.current.value = rowCount + \"\";\n    columnRef.current.value = columnCount + \"\";\n    countRef.current.value = count + \"\";\n  }, []);\n\n  const onUpdate = () => {\n    reset();\n    const r = Number(rowRef.current?.value);\n    const c = Number(columnRef.current?.value);\n    const m = Number(countRef.current?.value);\n\n    if (Number.isNaN(r) || Number.isNaN(c) || Number.isNaN(m)) {\n      alert(\"bad values\");\n      return;\n    }\n    if (r * c < m) {\n      alert(\"bad values\");\n      return;\n    }\n\n    setMineCount(m);\n    setRows(r);\n    setColumns(c);\n  };\n\n  const startGame = useCallback(\n    (x: number, y: number) => {\n      if (!mines.length) {\n        const id = x + y * columns;\n        const set = new Set<number>([id]);\n\n        while (set.size !== mineCount + 1) {\n          set.add(Math.floor(Math.random() * rows * columns));\n        }\n        set.delete(id);\n\n        setMines(\n          Array.from(set).map((id) => {\n            const x = id % columns;\n            const y = Math.floor(id / columns);\n            return { x, y };\n          })\n        );\n        setTime((t) => 1);\n        timerId.current = setInterval(() => {\n          setTime((t) => t + 1);\n        }, 1000);\n      }\n      if (marked.find((f) => f.x === x && f.y === y)) {\n        return;\n      }\n      const field = openFields.find((f) => f.x === x && f.y === y);\n      if (!field) {\n        setOpenFields((arr) => [...arr, { x, y }]);\n        setIsClick(true);\n      }\n    },\n\n    [mines, mineCount, rows, columns, openFields, marked]\n  );\n\n  const markCell = useCallback(\n    (x: number, y: number) => {\n      if (openFields.find((m) => m.x === x && m.y === y)) {\n        return;\n      }\n      const idx = marked.findIndex((m) => m.x === x && m.y === y);\n      if (idx !== -1) {\n        setMarked((arr) => arr.filter((_, i) => i !== idx));\n      } else if (marked.length !== mineCount) {\n        setMarked((arr) => [...arr, { x, y }]);\n      }\n    },\n    [mineCount, marked, openFields]\n  );\n\n  useEffect(() => {\n    const result: Array<{ x: number; y: number; value: number }> = [];\n\n    for (let i = 0; i < columns; ++i) {\n      for (let j = 0; j < rows; ++j) {\n        if (mines.find((m) => m.x === i && m.y === j)) {\n          continue;\n        }\n\n        let count = 0;\n        if (j !== 0 && i !== 0) {\n          const mine = mines.find((m) => m.x === i - 1 && m.y === j - 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (j !== 0) {\n          const mine = mines.find((m) => m.x === i && m.y === j - 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (j !== 0 && i !== columns - 1) {\n          const mine = mines.find((m) => m.x === i + 1 && m.y === j - 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== 0) {\n          const mine = mines.find((m) => m.x === i - 1 && m.y === j);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== columns - 1) {\n          const mine = mines.find((m) => m.x === i + 1 && m.y === j);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== 0 && j !== rows - 1) {\n          const mine = mines.find((m) => m.x === i - 1 && m.y === j + 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (j !== rows - 1) {\n          const mine = mines.find((m) => m.x === i && m.y === j + 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== columns - 1 && j !== rows - 1) {\n          const mine = mines.find((m) => m.x === i + 1 && m.y === j + 1);\n          if (mine) {\n            count++;\n          }\n        }\n        result.push({ x: i, y: j, value: count });\n      }\n    }\n    setNumbers(result);\n  }, [columns, mines, rows]);\n\n  useEffect(() => {\n    if (!openFields.length || !isClick) {\n      return;\n    }\n\n    setIsClick(false);\n    const { x, y } = openFields[openFields.length - 1];\n    const field = mines.find((m) => m.x === x && m.y === y);\n    if (field) {\n      alert(\"you lost\");\n      setReavelMines(true);\n      return;\n    }\n    const num = numbers.find((m) => m.x === x && m.y === y);\n    if (!num) {\n      return;\n    }\n\n    if (num.value === 0) {\n      const result: Points = [...openFields];\n      openNearCells(numbers, x, y, rows, columns, result);\n      setOpenFields(result);\n    }\n  }, [openFields, numbers, mines, rows, columns, isClick]);\n\n  useEffect(() => {\n    if (openFields.length + mineCount === rows * columns) {\n      alert(\"win\");\n      clearInterval(timerId.current);\n    }\n  }, [openFields, mineCount, rows, columns]);\n\n  return (\n    <div\n      style={{\n        background: \"#eeeeee\",\n        display: \"inline-flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Header\n        mineCount={mineCount - marked.length}\n        time={time}\n        columns={columns}\n        reset={reset}\n      />\n      <Field\n        rows={rows}\n        columns={columns}\n        startGame={startGame}\n        mines={mines}\n        numbers={numbers}\n        openFields={openFields}\n        marked={marked}\n        markCell={markCell}\n        revealMines={revealMines}\n      />\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        <div style={{ display: \"grid\", gridTemplateColumns: \"100px 50px\" }}>\n          <label style={{ display: \"contents\" }}>\n            mine count:\n            <input ref={countRef} />\n          </label>\n          <label style={{ display: \"contents\" }}>\n            rows:\n            <input ref={rowRef} />\n          </label>\n          <label style={{ display: \"contents\" }}>\n            columns:\n            <input ref={columnRef} />\n          </label>\n          <button style={{ gridColumn: \"1 / span 2\" }} onClick={onUpdate}>\n            update\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}