{"version":3,"sources":["Display.tsx","utils.ts","Header.tsx","Field.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Display","value","length","style","background","color","padding","rectHW","Header","mineCount","time","columns","reset","minWidth","display","justifyContent","className","onClick","drawLines","rows","ctx","beginPath","clearRect","strokeStyle","i","j","moveTo","lineTo","stroke","closePath","Field","React","memo","startGame","mines","numbers","openFields","markCell","marked","revealMines","canvasRef","useRef","useState","x","setX","y","setY","useEffect","current","getContext","hoverReact","canvas","evt","addEventListener","onContextMenu","preventDefault","removeEventListener","height","width","textBaseline","textAlign","font","fillStyle","hover","Math","floor","offsetX","offsetY","leave","find","m","num","fillText","fillRect","ref","openNearCells","result","toCheck","p","push","point","n","App","rowRef","columnRef","countRef","timerId","setMineCount","setMarked","setTime","setRows","setColumns","setMines","setNumbers","setOpenFields","isClick","setIsClick","setReavelMines","useCallback","clearInterval","rowCount","columnCount","count","id","set","Set","size","add","random","delete","Array","from","map","t","setInterval","f","arr","idx","findIndex","filter","_","alert","flexDirection","alignItems","gridTemplateColumns","gridColumn","r","Number","c","isNaN","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.85846c90.chunk.js","sourcesContent":["import React, { FC } from \"react\";\r\n\r\nexport const Display: FC<{ value: string }> = ({ value }) => {\r\n  while (value.length < 3) {\r\n    value = \"0\" + value;\r\n  }\r\n  return (\r\n    <span style={{ background: \"black\", color: \"red\", padding: \"2px 5px\" }}>\r\n      {value}\r\n    </span>\r\n  );\r\n};\r\n","export const cell = 16;\r\n\r\nexport const rectHW = 20;","import React, { FC } from \"react\";\r\nimport { Display } from \"./Display\";\r\nimport { cell } from \"./utils\";\r\n\r\nexport const Header: FC<{\r\n  mineCount: number;\r\n  time: number;\r\n  columns: number;\r\n  reset: () => void;\r\n}> = ({ mineCount, time, columns, reset }) => (\r\n  <div\r\n    style={{\r\n      padding: \"5px\",\r\n      minWidth: columns * cell + \"px\",\r\n      display: \"flex\",\r\n      justifyContent: \"space-between\"\r\n    }}\r\n  >\r\n    <Display value={mineCount + \"\"} />\r\n    <button className=\"smile-button\" onClick={reset} />\r\n    <Display value={time + \"\"} />\r\n  </div>\r\n);\r\n","import React, { FC, useRef, useState, useEffect } from \"react\";\r\nimport { cell, rectHW } from \"./utils\";\r\n\r\nconst drawLines = (\r\n  columns: number,\r\n  rows: number,\r\n  ctx: CanvasRenderingContext2D\r\n) => {\r\n  ctx.beginPath();\r\n  ctx.clearRect(0, 0, columns * rectHW, rows * rectHW);\r\n  ctx.strokeStyle = \"darkgrey\";\r\n\r\n  for (let i = 0; i < columns; ++i) {\r\n    for (let j = 0; j < rows; ++j) {\r\n      ctx.moveTo(i * rectHW, j * rectHW);\r\n      ctx.lineTo(i * rectHW + rectHW, j * rectHW);\r\n      ctx.lineTo(i * rectHW + rectHW, j * rectHW + rectHW);\r\n      ctx.lineTo(i * rectHW, j * rectHW + rectHW);\r\n      ctx.lineTo(i * rectHW, j * rectHW);\r\n    }\r\n  }\r\n  ctx.stroke();\r\n  ctx.closePath();\r\n};\r\n\r\nconst hoverReact = (x: number, y: number, ctx: CanvasRenderingContext2D) => {\r\n  ctx.beginPath();\r\n  ctx.strokeStyle = \"black\";\r\n\r\n  ctx.moveTo(x * rectHW, y * rectHW);\r\n  ctx.lineTo(x * rectHW + rectHW, y * rectHW);\r\n  ctx.lineTo(x * rectHW + rectHW, y * rectHW + rectHW);\r\n  ctx.lineTo(x * rectHW, y * rectHW + rectHW);\r\n  ctx.lineTo(x * rectHW, y * rectHW);\r\n\r\n  ctx.stroke();\r\n  ctx.closePath();\r\n};\r\n\r\nexport const Field: FC<{\r\n  rows: number;\r\n  columns: number;\r\n  startGame: (x: number, y: number) => void;\r\n  markCell: (x: number, y: number) => void;\r\n  mines: Array<{ x: number; y: number }>;\r\n  marked: Array<{ x: number; y: number }>;\r\n  numbers: Array<{ x: number; y: number; value: number }>;\r\n  openFields: Array<{ x: number; y: number }>;\r\n  revealMines: boolean;\r\n}> = React.memo(\r\n  ({\r\n    columns,\r\n    rows,\r\n    startGame,\r\n    mines,\r\n    numbers,\r\n    openFields,\r\n    markCell,\r\n    marked,\r\n    revealMines\r\n  }) => {\r\n    const canvasRef = useRef<HTMLCanvasElement>(null);\r\n\r\n    const [x, setX] = useState(-1);\r\n    const [y, setY] = useState(-1);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n\r\n      drawLines(columns, rows, ctx);\r\n      if (x !== -1 && y !== -1) {\r\n        hoverReact(x, y, ctx);\r\n      }\r\n    }, [x, y, mines, columns, rows]);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n\r\n      const onClick = (evt: MouseEvent) => {\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        startGame(x, y);\r\n      };\r\n      canvas.addEventListener(\"click\", onClick);\r\n\r\n      const onContextMenu = (evt: MouseEvent) => {\r\n        evt.preventDefault();\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        markCell(x, y);\r\n      };\r\n      canvas.addEventListener(\"contextmenu\", onContextMenu);\r\n\r\n      return () => {\r\n        canvas.removeEventListener(\"click\", onClick);\r\n        canvas.removeEventListener(\"contextmenu\", onContextMenu);\r\n      };\r\n    }, [x, y, startGame, revealMines, markCell]);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n\r\n      canvas.height = rows * rectHW;\r\n      canvas.width = columns * rectHW;\r\n\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n      drawLines(columns, rows, ctx);\r\n\r\n      ctx.textBaseline = \"middle\";\r\n      ctx.textAlign = \"center\";\r\n      ctx.font = \"16px Arial\";\r\n      ctx.fillStyle = \"grey\";\r\n\r\n      const hover = (evt: MouseEvent) => {\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        setX(Math.floor(evt.offsetX / cell));\r\n        setY(Math.floor(evt.offsetY / cell));\r\n      };\r\n      canvas.addEventListener(\"mousemove\", hover);\r\n\r\n      const leave = () => {\r\n        if (revealMines) {\r\n          return;\r\n        }\r\n        setX(-1);\r\n        setY(-1);\r\n      };\r\n      canvas.addEventListener(\"mouseleave\", leave);\r\n\r\n      return () => {\r\n        canvas.removeEventListener(\"mousemove\", hover);\r\n        canvas.removeEventListener(\"mouseleave\", leave);\r\n      };\r\n    }, [columns, revealMines, rows]);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n      for (const { x, y } of openFields) {\r\n        if (mines.find(m => m.x === x && m.y === y)) {\r\n          return;\r\n        }\r\n        const num = numbers.find(m => m.x === x && m.y === y);\r\n        if (!num) {\r\n          return;\r\n        }\r\n\r\n        ctx.fillStyle = \"grey\";\r\n        if (num.value !== 0) {\r\n          ctx.fillText(\r\n            num.value + \"\",\r\n            x * rectHW + rectHW / 2,\r\n            y * rectHW + rectHW / 2\r\n          );\r\n        } else {\r\n          ctx.fillRect(x * rectHW, y * rectHW, rectHW, rectHW);\r\n        }\r\n      }\r\n    }, [numbers, openFields, mines, x, y, columns, rows, revealMines]);\r\n\r\n    useEffect(() => {\r\n      if (!revealMines) {\r\n        return;\r\n      }\r\n      const canvas = canvasRef.current!;\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n\r\n      ctx.fillStyle = \"red\";\r\n      for (const { x, y } of mines) {\r\n        ctx.fillRect(x * rectHW, y * rectHW, rectHW, rectHW);\r\n      }\r\n    }, [mines, revealMines]);\r\n\r\n    useEffect(() => {\r\n      const canvas = canvasRef.current!;\r\n      const ctx = canvas.getContext(\"2d\")!;\r\n\r\n      for (const { x, y } of marked) {\r\n        ctx.fillText(\"!\", x * rectHW + rectHW / 2, y * rectHW + rectHW / 2);\r\n      }\r\n    }, [marked, x, y, revealMines]);\r\n\r\n    return (\r\n      <div style={{ padding: \"5px\" }}>\r\n        <div\r\n          style={{\r\n            width: cell * columns + \"px\",\r\n            height: cell * rows + \"px\"\r\n          }}\r\n        >\r\n          <canvas\r\n            ref={canvasRef}\r\n            style={{\r\n              width: \"100%\",\r\n              height: \"100%\"\r\n            }}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n","import React, { FC, useEffect, useState, useCallback, useRef } from \"react\";\nimport { Header } from \"./Header\";\nimport { Field } from \"./Field\";\n\ntype Point = { x: number; y: number };\ntype Points = Array<Point>;\n\nconst count = 10;\nconst rowCount = 10;\nconst columnCount = 10;\n\nconst openNearCells = (\n  numbers: Array<{ x: number; y: number; value: number }>,\n  x: number,\n  y: number,\n  rows: number,\n  columns: number,\n  result: Points\n) => {\n  const toCheck: Points = [];\n  if (\n    x !== 0 &&\n    y !== 0 &&\n    !result.find((p) => p.x === x - 1 && p.y === y - 1)\n  ) {\n    toCheck.push({ x: x - 1, y: y - 1 });\n  }\n  if (y !== 0 && !result.find((p) => p.x === x && p.y === y - 1)) {\n    toCheck.push({ x, y: y - 1 });\n  }\n  if (\n    x !== columns - 1 &&\n    y !== 0 &&\n    !result.find((p) => p.x === x + 1 && p.y === y - 1)\n  ) {\n    toCheck.push({ x: x + 1, y: y - 1 });\n  }\n  if (x !== 0 && !result.find((p) => p.x === x - 1 && p.y === y)) {\n    toCheck.push({ x: x - 1, y });\n  }\n  if (x !== columns - 1 && !result.find((p) => p.x === x + 1 && p.y === y)) {\n    toCheck.push({ x: x + 1, y });\n  }\n  if (\n    x !== 0 &&\n    y !== rows - 1 &&\n    !result.find((p) => p.x === x - 1 && p.y === y + 1)\n  ) {\n    toCheck.push({ x: x - 1, y: y + 1 });\n  }\n  if (y !== rows - 1 && !result.find((p) => p.x === x && p.y === y + 1)) {\n    toCheck.push({ x, y: y + 1 });\n  }\n  if (\n    x !== columns - 1 &&\n    y !== rows - 1 &&\n    !result.find((p) => p.x === x + 1 && p.y === y + 1)\n  ) {\n    toCheck.push({ x: x + 1, y: y + 1 });\n  }\n\n  result.push(...toCheck);\n  for (const point of toCheck) {\n    const num = numbers.find((n) => n.x === point.x && n.y === point.y);\n    if (num?.value === 0) {\n      openNearCells(numbers, point.x, point.y, rows, columns, result);\n    }\n  }\n};\n\nexport const App: FC = () => {\n  const rowRef = useRef<HTMLInputElement>(null);\n  const columnRef = useRef<HTMLInputElement>(null);\n  const countRef = useRef<HTMLInputElement>(null);\n  const timerId = useRef<NodeJS.Timer>(-1 as any);\n  const [mineCount, setMineCount] = useState(count);\n  const [marked, setMarked] = useState<Points>([]);\n  const [time, setTime] = useState(0);\n  const [rows, setRows] = useState(rowCount);\n  const [columns, setColumns] = useState(columnCount);\n  const [mines, setMines] = useState<Points>([]);\n  const [numbers, setNumbers] = useState<\n    Array<{ x: number; y: number; value: number }>\n  >([]);\n  const [openFields, setOpenFields] = useState<Points>([]);\n  const [isClick, setIsClick] = useState(false);\n  const [revealMines, setReavelMines] = useState(false);\n\n  const reset = useCallback(() => {\n    clearInterval(timerId.current);\n    setTime(0);\n    setMarked([]);\n    setNumbers([]);\n    setOpenFields([]);\n    setMines([]);\n    setReavelMines(false);\n  }, []);\n\n  useEffect(() => {\n    if (!rowRef.current || !columnRef.current || !countRef.current) {\n      return;\n    }\n    rowRef.current.value = rowCount + \"\";\n    columnRef.current.value = columnCount + \"\";\n    countRef.current.value = count + \"\";\n  }, []);\n\n  const onUpdate = () => {\n    reset();\n    const r = Number(rowRef.current?.value);\n    const c = Number(columnRef.current?.value);\n    const m = Number(countRef.current?.value);\n\n    if (Number.isNaN(r) || Number.isNaN(c) || Number.isNaN(m)) {\n      alert(\"bad values\");\n      return;\n    }\n    if (r * c < m) {\n      alert(\"bad values\");\n      return;\n    }\n\n    setMineCount(m);\n    setRows(r);\n    setColumns(c);\n  };\n\n  const startGame = useCallback(\n    (x: number, y: number) => {\n      if (!mines.length) {\n        const id = x + y * columns;\n        const set = new Set<number>([id]);\n\n        while (set.size !== mineCount + 1) {\n          set.add(Math.floor(Math.random() * rows * columns));\n        }\n        set.delete(id);\n\n        setMines(\n          Array.from(set).map((id) => {\n            const x = id % columns;\n            const y = Math.floor(id / columns);\n            return { x, y };\n          })\n        );\n        setTime((t) => 1);\n        timerId.current = setInterval(() => {\n          setTime((t) => t + 1);\n        }, 1000);\n      }\n      if (marked.find((f) => f.x === x && f.y === y)) {\n        return;\n      }\n      const field = openFields.find((f) => f.x === x && f.y === y);\n      if (!field) {\n        setOpenFields((arr) => [...arr, { x, y }]);\n        setIsClick(true);\n      }\n    },\n\n    [mines, mineCount, rows, columns, openFields, marked]\n  );\n\n  const markCell = useCallback(\n    (x: number, y: number) => {\n      if (openFields.find((m) => m.x === x && m.y === y)) {\n        return;\n      }\n      const idx = marked.findIndex((m) => m.x === x && m.y === y);\n      if (idx !== -1) {\n        setMarked((arr) => arr.filter((_, i) => i !== idx));\n      } else if (marked.length !== mineCount) {\n        setMarked((arr) => [...arr, { x, y }]);\n      }\n    },\n    [mineCount, marked, openFields]\n  );\n\n  useEffect(() => {\n    const result: Array<{ x: number; y: number; value: number }> = [];\n\n    for (let i = 0; i < columns; ++i) {\n      for (let j = 0; j < rows; ++j) {\n        if (mines.find((m) => m.x === i && m.y === j)) {\n          continue;\n        }\n\n        let count = 0;\n        if (j !== 0 && i !== 0) {\n          const mine = mines.find((m) => m.x === i - 1 && m.y === j - 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (j !== 0) {\n          const mine = mines.find((m) => m.x === i && m.y === j - 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (j !== 0 && i !== columns - 1) {\n          const mine = mines.find((m) => m.x === i + 1 && m.y === j - 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== 0) {\n          const mine = mines.find((m) => m.x === i - 1 && m.y === j);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== columns - 1) {\n          const mine = mines.find((m) => m.x === i + 1 && m.y === j);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== 0 && j !== rows - 1) {\n          const mine = mines.find((m) => m.x === i - 1 && m.y === j + 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (j !== rows - 1) {\n          const mine = mines.find((m) => m.x === i && m.y === j + 1);\n          if (mine) {\n            count++;\n          }\n        }\n\n        if (i !== columns - 1 && j !== rows - 1) {\n          const mine = mines.find((m) => m.x === i + 1 && m.y === j + 1);\n          if (mine) {\n            count++;\n          }\n        }\n        result.push({ x: i, y: j, value: count });\n      }\n    }\n    setNumbers(result);\n  }, [columns, mines, rows]);\n\n  useEffect(() => {\n    if (!openFields.length || !isClick) {\n      return;\n    }\n\n    setIsClick(false);\n    const { x, y } = openFields[openFields.length - 1];\n    const field = mines.find((m) => m.x === x && m.y === y);\n    if (field) {\n      alert(\"you lost\");\n      setReavelMines(true);\n      return;\n    }\n    const num = numbers.find((m) => m.x === x && m.y === y);\n    if (!num) {\n      return;\n    }\n\n    if (num.value === 0) {\n      const result: Points = [...openFields];\n      openNearCells(numbers, x, y, rows, columns, result);\n      setOpenFields(result);\n    }\n  }, [openFields, numbers, mines, rows, columns, isClick]);\n\n  useEffect(() => {\n    if (openFields.length + mineCount === rows * columns) {\n      alert(\"win\");\n      clearInterval(timerId.current);\n    }\n  }, [openFields, mineCount, rows, columns]);\n\n  return (\n    <div\n      style={{\n        background: \"#eeeeee\",\n        display: \"inline-flex\",\n        flexDirection: \"column\",\n      }}\n    >\n      <Header\n        mineCount={mineCount - marked.length}\n        time={time}\n        columns={columns}\n        reset={reset}\n      />\n      <Field\n        rows={rows}\n        columns={columns}\n        startGame={startGame}\n        mines={mines}\n        numbers={numbers}\n        openFields={openFields}\n        marked={marked}\n        markCell={markCell}\n        revealMines={revealMines}\n      />\n      <div style={{ display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\n        <div style={{ display: \"grid\", gridTemplateColumns: \"100px 50px\" }}>\n          <label style={{ display: \"contents\" }}>\n            mine count:\n            <input ref={countRef} />\n          </label>\n          <label style={{ display: \"contents\" }}>\n            rows:\n            <input ref={rowRef} />\n          </label>\n          <label style={{ display: \"contents\" }}>\n            columns:\n            <input ref={columnRef} />\n          </label>\n          <button style={{ gridColumn: \"1 / span 2\" }} onClick={onUpdate}>\n            update\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { App } from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}